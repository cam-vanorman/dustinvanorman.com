{"version":3,"sources":["../bower_components/jquery.parallax/jquery.parallax.js"],"names":["$","$window","window","windowHeight","height","resize","fn","parallax","xpos","speedFactor","outerHeight","update","pos","scrollTop","$this","each","$element","this","top","offset","getHeight","css","Math","round","firstTop","jqo","arguments","length","bind","jQuery"],"mappings":"CAaA,SAAAA,GACA,GAAAC,GAAAD,EAAAE,QACAC,EAAAF,EAAAG,QAEAH,GAAAI,OAAA,WACAF,EAAAF,EAAAG,WAGAJ,EAAAM,GAAAC,SAAA,SAAAC,EAAAC,EAAAC,GA2BA,QAAAC,KACA,GAAAC,GAAAX,EAAAY,WAEAC,GAAAC,KAAA,WACA,GAAAC,GAAAhB,EAAAiB,MACAC,EAAAF,EAAAG,SAAAD,IACAd,EAAAgB,EAAAJ,EAGAJ,GAAAM,EAAAd,GAAAc,EAAAN,EAAAT,GAIAW,EAAAO,IAAA,qBAAAb,EAAA,IAAAc,KAAAC,OAAAC,EAAAZ,GAAAH,GAAA,QAvCA,GACAW,GACAI,EAFAV,EAAAd,EAAAiB,KAMAH,GAAAC,KAAA,WACAS,EAAAV,EAAAK,SAAAD,MAIAE,EADAV,EACA,SAAAe,GACA,MAAAA,GAAAf,aAAA,IAGA,SAAAe,GACA,MAAAA,GAAArB,WAKAsB,UAAAC,OAAA,GAAA,OAAAnB,KAAAA,EAAA,QACAkB,UAAAC,OAAA,GAAA,OAAAlB,KAAAA,EAAA,KACAiB,UAAAC,OAAA,GAAA,OAAAjB,KAAAA,GAAA,GAoBAT,EAAA2B,KAAA,SAAAjB,GAAAN,OAAAM,GACAA,MAEAkB","file":"jquery.parallax.js","sourcesContent":["/*\nPlugin: jQuery Parallax\nVersion 1.1.3\nAuthor: Ian Lunn\nTwitter: @IanLunn\nAuthor URL: http://www.ianlunn.co.uk/\nPlugin URL: http://www.ianlunn.co.uk/plugins/jquery-parallax/\n\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html\n*/\n\n(function( $ ){\n\tvar $window = $(window);\n\tvar windowHeight = $window.height();\n\n\t$window.resize(function () {\n\t\twindowHeight = $window.height();\n\t});\n\n\t$.fn.parallax = function(xpos, speedFactor, outerHeight) {\n\t\tvar $this = $(this);\n\t\tvar getHeight;\n\t\tvar firstTop;\n\t\tvar paddingTop = 0;\n\t\t\n\t\t//get the starting position of each element to have parallax applied to it\t\t\n\t\t$this.each(function(){\n\t\t    firstTop = $this.offset().top;\n\t\t});\n\n\t\tif (outerHeight) {\n\t\t\tgetHeight = function(jqo) {\n\t\t\t\treturn jqo.outerHeight(true);\n\t\t\t};\n\t\t} else {\n\t\t\tgetHeight = function(jqo) {\n\t\t\t\treturn jqo.height();\n\t\t\t};\n\t\t}\n\t\t\t\n\t\t// setup defaults if arguments aren't specified\n\t\tif (arguments.length < 1 || xpos === null) xpos = \"50%\";\n\t\tif (arguments.length < 2 || speedFactor === null) speedFactor = 0.1;\n\t\tif (arguments.length < 3 || outerHeight === null) outerHeight = true;\n\t\t\n\t\t// function to be called whenever the window is scrolled or resized\n\t\tfunction update(){\n\t\t\tvar pos = $window.scrollTop();\t\t\t\t\n\n\t\t\t$this.each(function(){\n\t\t\t\tvar $element = $(this);\n\t\t\t\tvar top = $element.offset().top;\n\t\t\t\tvar height = getHeight($element);\n\n\t\t\t\t// Check if totally above or totally below viewport\n\t\t\t\tif (top + height < pos || top > pos + windowHeight) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$this.css('backgroundPosition', xpos + \" \" + Math.round((firstTop - pos) * speedFactor) + \"px\");\n\t\t\t});\n\t\t}\t\t\n\n\t\t$window.bind('scroll', update).resize(update);\n\t\tupdate();\n\t};\n})(jQuery);\n"],"sourceRoot":"/source/"}